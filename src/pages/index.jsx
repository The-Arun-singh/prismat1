import Head from 'next/head';
import Link from 'next/link';
import prisma from '@/lib/prismadb'
import { useRouter } from 'next/router';
import { useState } from 'react';

export async function getServerSideProps() {
  const users = await prisma.user.findMany();

  return {
    props: {
      users,
    }
  }
}


export default function Home({ users }) {
  const [loggedIn, setLoggedIn] = useState(false);
  const router = useRouter()

  const refreshData = () => {
    router.replace(router.asPath)
  }

  const handleClick = (id) => {
    router.push(`./admin/user/${id}`);
  }

  const handleDelete = async (id) => {
    try {
      await fetch(`/api/admin/user/${id}`, {
        method: "DELETE",
        headers: { 'Content-type': 'application/json' },
      }).then(() => {
        refreshData();
      })
    } catch (error) {
      console.error(error);
    }
  }

  return (
    <>
      <Head>
        <title>Prisma test App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>



      {loggedIn ? (
        <>
          <h1>This is a test app for prisma-Nextjs Integration.</h1>
          <button>
            <Link href={'./admin/createUser'}>Create User</Link>
          </button>

          <h2>Users</h2>
          <ul>
            {users.map(user => <li key={user.id}>
              {user.name}
              <button onClick={() => handleDelete(user.id)}>Delete</button>
              <button onClick={() => handleClick(user.id)}>Edit</button>
            </li>)}
          </ul></>
      ) : (
        <>
          <button><Link href={'./login'}>Login</Link></button>
        </>
      )}
    </>
  )
}
